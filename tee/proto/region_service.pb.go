// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v3.21.12
// source: tee/proto/region_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegionMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Unit          string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionMetric) Reset() {
	*x = RegionMetric{}
	mi := &file_tee_proto_region_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionMetric) ProtoMessage() {}

func (x *RegionMetric) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionMetric.ProtoReflect.Descriptor instead.
func (*RegionMetric) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegionMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionMetric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RegionMetric) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *RegionMetric) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// Renamed from Region to TEERegion to avoid conflicts
type TEERegion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeeIds        [][]byte               `protobuf:"bytes,2,rep,name=tee_ids,json=teeIds,proto3" json:"tee_ids,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Metrics       []*RegionMetric        `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TEERegion) Reset() {
	*x = TEERegion{}
	mi := &file_tee_proto_region_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TEERegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TEERegion) ProtoMessage() {}

func (x *TEERegion) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TEERegion.ProtoReflect.Descriptor instead.
func (*TEERegion) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{1}
}

func (x *TEERegion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TEERegion) GetTeeIds() [][]byte {
	if x != nil {
		return x.TeeIds
	}
	return nil
}

func (x *TEERegion) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TEERegion) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TEERegion) GetMetrics() []*RegionMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type CreateRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeeIds        [][]byte               `protobuf:"bytes,2,rep,name=tee_ids,json=teeIds,proto3" json:"tee_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegionRequest) Reset() {
	*x = CreateRegionRequest{}
	mi := &file_tee_proto_region_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegionRequest) ProtoMessage() {}

func (x *CreateRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegionRequest.ProtoReflect.Descriptor instead.
func (*CreateRegionRequest) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRegionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRegionRequest) GetTeeIds() [][]byte {
	if x != nil {
		return x.TeeIds
	}
	return nil
}

type CreateRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        *TEERegion             `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"` // Updated reference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegionResponse) Reset() {
	*x = CreateRegionResponse{}
	mi := &file_tee_proto_region_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegionResponse) ProtoMessage() {}

func (x *CreateRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegionResponse.ProtoReflect.Descriptor instead.
func (*CreateRegionResponse) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRegionResponse) GetRegion() *TEERegion {
	if x != nil {
		return x.Region
	}
	return nil
}

type UpdateRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeeIds        [][]byte               `protobuf:"bytes,2,rep,name=tee_ids,json=teeIds,proto3" json:"tee_ids,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRegionRequest) Reset() {
	*x = UpdateRegionRequest{}
	mi := &file_tee_proto_region_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegionRequest) ProtoMessage() {}

func (x *UpdateRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegionRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegionRequest) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRegionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRegionRequest) GetTeeIds() [][]byte {
	if x != nil {
		return x.TeeIds
	}
	return nil
}

func (x *UpdateRegionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        *TEERegion             `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"` // Updated reference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRegionResponse) Reset() {
	*x = UpdateRegionResponse{}
	mi := &file_tee_proto_region_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegionResponse) ProtoMessage() {}

func (x *UpdateRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegionResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegionResponse) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRegionResponse) GetRegion() *TEERegion {
	if x != nil {
		return x.Region
	}
	return nil
}

type DeleteRegionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegionRequest) Reset() {
	*x = DeleteRegionRequest{}
	mi := &file_tee_proto_region_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegionRequest) ProtoMessage() {}

func (x *DeleteRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegionRequest.ProtoReflect.Descriptor instead.
func (*DeleteRegionRequest) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRegionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRegionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegionResponse) Reset() {
	*x = DeleteRegionResponse{}
	mi := &file_tee_proto_region_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegionResponse) ProtoMessage() {}

func (x *DeleteRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegionResponse.ProtoReflect.Descriptor instead.
func (*DeleteRegionResponse) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRegionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetRegionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegionStatusRequest) Reset() {
	*x = GetRegionStatusRequest{}
	mi := &file_tee_proto_region_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionStatusRequest) ProtoMessage() {}

func (x *GetRegionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRegionStatusRequest) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRegionStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRegionStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Metrics       []*RegionMetric        `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegionStatusResponse) Reset() {
	*x = GetRegionStatusResponse{}
	mi := &file_tee_proto_region_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionStatusResponse) ProtoMessage() {}

func (x *GetRegionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRegionStatusResponse) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetRegionStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRegionStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetRegionStatusResponse) GetMetrics() []*RegionMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ListRegionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegionsRequest) Reset() {
	*x = ListRegionsRequest{}
	mi := &file_tee_proto_region_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegionsRequest) ProtoMessage() {}

func (x *ListRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegionsRequest.ProtoReflect.Descriptor instead.
func (*ListRegionsRequest) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{10}
}

type ListRegionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Regions       []*TEERegion           `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"` // Updated reference
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegionsResponse) Reset() {
	*x = ListRegionsResponse{}
	mi := &file_tee_proto_region_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegionsResponse) ProtoMessage() {}

func (x *ListRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tee_proto_region_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegionsResponse.ProtoReflect.Descriptor instead.
func (*ListRegionsResponse) Descriptor() ([]byte, []int) {
	return file_tee_proto_region_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListRegionsResponse) GetRegions() []*TEERegion {
	if x != nil {
		return x.Regions
	}
	return nil
}

var File_tee_proto_region_service_proto protoreflect.FileDescriptor

var file_tee_proto_region_service_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x74, 0x65, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x0c, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9e, 0x01, 0x0a, 0x09, 0x54, 0x45, 0x45, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x65, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x3e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x65, 0x65, 0x49, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x45, 0x45,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x65, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x45, 0x45, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x45, 0x45, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x73, 0x32, 0xaa, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x74, 0x65, 0x65, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x68,
	0x6f, 0x6d, 0x62, 0x75, 0x73, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x76, 0x6d, 0x2f, 0x74, 0x65,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tee_proto_region_service_proto_rawDescOnce sync.Once
	file_tee_proto_region_service_proto_rawDescData = file_tee_proto_region_service_proto_rawDesc
)

func file_tee_proto_region_service_proto_rawDescGZIP() []byte {
	file_tee_proto_region_service_proto_rawDescOnce.Do(func() {
		file_tee_proto_region_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tee_proto_region_service_proto_rawDescData)
	})
	return file_tee_proto_region_service_proto_rawDescData
}

var file_tee_proto_region_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tee_proto_region_service_proto_goTypes = []any{
	(*RegionMetric)(nil),            // 0: teeregion.RegionMetric
	(*TEERegion)(nil),               // 1: teeregion.TEERegion
	(*CreateRegionRequest)(nil),     // 2: teeregion.CreateRegionRequest
	(*CreateRegionResponse)(nil),    // 3: teeregion.CreateRegionResponse
	(*UpdateRegionRequest)(nil),     // 4: teeregion.UpdateRegionRequest
	(*UpdateRegionResponse)(nil),    // 5: teeregion.UpdateRegionResponse
	(*DeleteRegionRequest)(nil),     // 6: teeregion.DeleteRegionRequest
	(*DeleteRegionResponse)(nil),    // 7: teeregion.DeleteRegionResponse
	(*GetRegionStatusRequest)(nil),  // 8: teeregion.GetRegionStatusRequest
	(*GetRegionStatusResponse)(nil), // 9: teeregion.GetRegionStatusResponse
	(*ListRegionsRequest)(nil),      // 10: teeregion.ListRegionsRequest
	(*ListRegionsResponse)(nil),     // 11: teeregion.ListRegionsResponse
}
var file_tee_proto_region_service_proto_depIdxs = []int32{
	0,  // 0: teeregion.TEERegion.metrics:type_name -> teeregion.RegionMetric
	1,  // 1: teeregion.CreateRegionResponse.region:type_name -> teeregion.TEERegion
	1,  // 2: teeregion.UpdateRegionResponse.region:type_name -> teeregion.TEERegion
	0,  // 3: teeregion.GetRegionStatusResponse.metrics:type_name -> teeregion.RegionMetric
	1,  // 4: teeregion.ListRegionsResponse.regions:type_name -> teeregion.TEERegion
	2,  // 5: teeregion.RegionService.CreateRegion:input_type -> teeregion.CreateRegionRequest
	4,  // 6: teeregion.RegionService.UpdateRegion:input_type -> teeregion.UpdateRegionRequest
	6,  // 7: teeregion.RegionService.DeleteRegion:input_type -> teeregion.DeleteRegionRequest
	8,  // 8: teeregion.RegionService.GetRegionStatus:input_type -> teeregion.GetRegionStatusRequest
	10, // 9: teeregion.RegionService.ListRegions:input_type -> teeregion.ListRegionsRequest
	3,  // 10: teeregion.RegionService.CreateRegion:output_type -> teeregion.CreateRegionResponse
	5,  // 11: teeregion.RegionService.UpdateRegion:output_type -> teeregion.UpdateRegionResponse
	7,  // 12: teeregion.RegionService.DeleteRegion:output_type -> teeregion.DeleteRegionResponse
	9,  // 13: teeregion.RegionService.GetRegionStatus:output_type -> teeregion.GetRegionStatusResponse
	11, // 14: teeregion.RegionService.ListRegions:output_type -> teeregion.ListRegionsResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_tee_proto_region_service_proto_init() }
func file_tee_proto_region_service_proto_init() {
	if File_tee_proto_region_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tee_proto_region_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tee_proto_region_service_proto_goTypes,
		DependencyIndexes: file_tee_proto_region_service_proto_depIdxs,
		MessageInfos:      file_tee_proto_region_service_proto_msgTypes,
	}.Build()
	File_tee_proto_region_service_proto = out.File
	file_tee_proto_region_service_proto_rawDesc = nil
	file_tee_proto_region_service_proto_goTypes = nil
	file_tee_proto_region_service_proto_depIdxs = nil
}
